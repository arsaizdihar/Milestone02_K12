import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import useSession from '~/hooks/useSession';
import { trpc } from '~/utils/trpc';

const Home: NextPage = () => {
  const logout = trpc.useMutation('auth.logout');
  const router = useRouter();
  const session = useSession();
  const queryClient = trpc.useContext();
  return (
    <>
      <Head>
        <title>Bear With TPB</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen justify-center items-center">
        {session.status !== 'loading' ? (
          session.data ? (
            <div className="flex flex-col items-center">
              {session.data.photoUrl && (
                <img
                  src={session.data.photoUrl}
                  alt={session.data.name}
                  width={80}
                />
              )}
              <p>{JSON.stringify(session.data)}</p>
              <button
                onClick={() =>
                  logout.mutateAsync().then(() => {
                    queryClient.setQueryData(['auth.currentUser'], undefined);
                    router.push('/auth/login');
                  })
                }
              >
                Log Out
              </button>
            </div>
          ) : (
            <div className="flex flex-col">
              <Link href="/auth/login">Login</Link>
              <Link href="/auth/register">Register</Link>
            </div>
          )
        ) : null}
      </div>
    </>
  );
};

export default Home;
